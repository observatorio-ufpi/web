name: Deploy Observatorio

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/

      - name: Upload static files
        uses: actions/upload-artifact@v4
        with:
          name: static-files
          path: src/files/
          

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: build/

      - name: Download static files
        uses: actions/download-artifact@v4
        with:
          name: static-files
          path: files/

      - name: Copy build to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/*"
          target: "/tmp/observatorio-build"

      - name: Copy static files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "files/*"
          target: "/tmp/observatorio-files"

      - name: Finalize deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mkdir -p /var/www/html/observatorio/web/build/src/files
            if [ -d /var/www/html/observatorio/web/build ]; then
              echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mv /var/www/html/observatorio/web/build /var/www/html/observatorio/web/build-backup-$(date +%Y%m%d-%H%M%S)
            fi
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S cp -r /tmp/observatorio-build/* /var/www/html/observatorio/web/build/
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mkdir -p /var/www/html/observatorio/web/build/src/files
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S cp -r /tmp/observatorio-files/* /var/www/html/observatorio/web/build/src/files/
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chown -R www-data:www-data /var/www/html/observatorio/web
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S systemctl reload nginx
            rm -rf /tmp/observatorio-build
            rm -rf /tmp/observatorio-files
